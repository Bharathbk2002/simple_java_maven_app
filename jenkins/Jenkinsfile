@Library('shared_library') _
pipeline {
    agent {
        label 'devServer'
    }
    tools {
        maven 'my-maven'
    }
    environment {
        Name = "Bharath"
    }
    parameters {
        choice choices: ['dev', 'prod'], name: 'Select_environment'
    }
    
    stages {
        stage('build') {
            steps {
                script {
                    def file = load "script.groovy"
                    file.greet()  
                }
                sharedLib.build()
                echo "hello ${Name}"
                stash name: 'buildArtifacts', includes: '**/target/*.jar'
            }
        }

        stage('test') {
            parallel {
                stage('testA') {
                    agent { label 'devServer' }
                    steps {
                        echo "This is test A"
                        sh 'mvn test'
                    }
                }
                stage('testB') {
                    agent { label 'devServer' }
                    steps {
                        echo "This is test B"
                        sh 'mvn test'
                    }
                }
            }
            post {
                success {
                    archiveArtifacts artifacts: '**/target/*.jar'
                }
            }
        }

        stage('deploy_dev') {
            when {
                expression {
                    return params.Select_environment == 'dev'  
                }
            }
            agent {
                label 'devServer'
            }
            steps {
                unstash 'buildArtifacts'
                echo "Deploying the application..."
                sh 'java -jar $WORKSPACE/target/my-app-1.0-SNAPSHOT.jar'
            }
        }

        stage('deploy_prod') {
            when {
                expression {
                    return params.Select_environment == 'prod'  
                }
            }
            agent {
                label 'prodServer'
            }
            steps {
                timeout(time: 5, unit: 'DAYS') {
                    input message: 'Deployment Approved'  
                }
                unstash 'buildArtifacts'
                echo "Deploying the application..."
                sh 'java -jar $WORKSPACE/target/my-app-1.0-SNAPSHOT.jar'
            }
        }
    }
}
